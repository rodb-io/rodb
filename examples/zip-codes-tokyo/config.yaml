parsers:
  - boolean:
      name: booleanZeroOne
      falseValues: ["0"]
      trueValues: ["1"]
  - integer:
      name: integerWithSpaces
      ignoreCharacters: " "
  - string:
      name: shiftJisString
      convertFromCharset: "Shift_JIS"
sources:
  - filesystem:
      name: filesystem
      path: /examples/zip-codes-tokyo
inputs:
  - csv:
      name: zipCodesTokyo
      source: filesystem
      path: ./zip-codes.csv
      ignoreFirstRow: false
      delimiter: ","
      columns:
        - name: code
          parser: integer
        - name: oldZipCode
          parser: integerWithSpaces
        - name: zipCode
          parser: string
        - name: prefectureKana
          parser: shiftJisString
        - name: municipalityKana
          parser: shiftJisString
        - name: townKana
          parser: shiftJisString
        - name: prefecture
          parser: shiftJisString
        - name: municipality
          parser: shiftJisString
        - name: town
          parser: shiftJisString
        - name: townHasMultipleZipCodes
          parser: booleanZeroOne
        - name: streetNumberAssignedPerKana
          parser: booleanZeroOne
        - name: hasSubdivision
          parser: booleanZeroOne
        - name: zipCodeHasMultipleTowns
          parser: booleanZeroOne
        - name: updatedId
          parser: integer
        - name: reasonForUpdateId
          parser: integer
  - csv:
      name: updatedValues
      source: filesystem
      path: ./updated-values.csv
      ignoreFirstRow: false
      delimiter: ","
      columns:
        - name: id
          parser: integer
        - name: name
          parser: string
  - csv:
      name: reasonsForUpdate
      source: filesystem
      path: ./reasons-for-updated.csv
      ignoreFirstRow: false
      delimiter: ","
      columns:
        - name: id
          parser: integer
        - name: name
          parser: string
indexes:
  - memoryMap:
      name: zipCode
      input: zipCodesTokyo
      columns:
        - zipCode
  - memoryMap:
      name: municipality
      input: zipCodesTokyo
      columns:
        - municipality
outputs:
  - jsonArray:
      name: listPostalCodes
      input: zipCodesTokyo
      endpoint: "/zip-codes"
      limit:
        default: 100
        max: 1000
        parameter: "limit"
      offset:
        parameter: "offset"
      search:
        municipality:
          column: municipality
          index: municipality
          parser: string
      relationships:
        updated:
          input: updatedValues
          match:
            - parentColumn: updatedId
              childColumn: id
              childIndex: default
        reasonsForUpdate:
          input: reasonsForUpdate
          match:
            - parentColumn: reasonForUpdateId
              childColumn: id
              childIndex: default
  - jsonObject:
      name: findOnePostalCode
      input: zipCodesTokyo
      endpoint: "/zip-codes/?"
      parameters:
        - column: zipCode
          parser: string
          index: zipCode
      relationships:
        updated:
          input: updatedValues
          match:
            - parentColumn: updatedId
              childColumn: id
              childIndex: default
        reasonsForUpdate:
          input: reasonsForUpdate
          match:
            - parentColumn: reasonForUpdateId
              childColumn: id
              childIndex: default
services:
  - http:
      name: httpService
      listen: ":80"
      errorsType: application/json
      outputs:
        - listPostalCodes
        - findOnePostalCode
