parsers:
  booleanZeroOne:
    boolean:
      falseValues: ["0"]
      trueValues: ["1"]
  integerWithSpaces:
    integer:
      ignoreCharacters: " "
  shiftJisString:
    string:
      convertFromCharset: "Shift_JIS"
sources:
  filesystem:
    filesystem:
      path: /examples/zip-codes-tokyo
inputs:
  zipCodesTokyo:
    csv:
      source: filesystem
      path: ./zip-codes.csv
      ignoreFirstRow: false
      delimiter: ","
      columns:
        - name: code
          parser: integer
        - name: oldZipCode
          parser: integerWithSpaces
        - name: zipCode
          parser: string
        - name: prefectureKana
          parser: shiftJisString
        - name: municipalityKana
          parser: shiftJisString
        - name: townKana
          parser: shiftJisString
        - name: prefecture
          parser: shiftJisString
        - name: municipality
          parser: shiftJisString
        - name: town
          parser: shiftJisString
        - name: townHasMultipleZipCodes
          parser: booleanZeroOne
        - name: streetNumberAssignedPerKana
          parser: booleanZeroOne
        - name: hasSubdivision
          parser: booleanZeroOne
        - name: zipCodeHasMultipleTowns
          parser: booleanZeroOne
        - name: updatedId
          parser: integer
        - name: reasonForUpdateId
          parser: integer
  updatedValues:
    csv:
      source: filesystem
      path: ./updated-values.csv
      ignoreFirstRow: false
      delimiter: ","
      columns:
        - name: id
          parser: integer
        - name: name
          parser: string
  reasonsForUpdate:
    csv:
      source: filesystem
      path: ./reasons-for-updated.csv
      ignoreFirstRow: false
      delimiter: ","
      columns:
        - name: id
          parser: integer
        - name: name
          parser: string
indexes:
  zipCode:
    memoryMap:
      input: zipCodesTokyo
      columns:
        - zipCode
services:
  httpService:
    http:
      listen: ":80"
      errorsType: application/json
outputs:
  findOnePostalCode:
    jsonObject:
      input: zipCodesTokyo
      services:
        - httpService
      endpoint: "/zip-codes/?"
      parameters:
        - column: zipCode
          parser: string
          index: zipCode
      relationships:
        updated:
          input: updatedValues
          index: default
          match:
            - parentColumn: updatedId
              childColumn: id
        reasonsForUpdate:
          input: reasonsForUpdate
          index: default
          match:
            - parentColumn: reasonForUpdateId
              childColumn: id
