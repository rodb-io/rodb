$id: https://rodb.io/schema/outputs/json-array.yaml
$schema: http://json-schema.org/draft-07/schema#
type: object
title: JSON Array
description: |
  This output produces a JSON array whose items are objects fetched from the input.
  The objects are found in the input by filtering the specified parameters.
  Objects from any input can also be embedded as a relationship.
  There is an always-enabled and configurable paging to this array.
examples:
  - |
    name: venuesList
    type: jsonArray
    input: venues
    parameters:
      city:
        property: city
        index: venueAddress
        parser: string
  - |
    name: userList
    type: jsonArray
    input: users
    parameters:
      name:
        property: name
        index: userInfo
        parser: string
    limit:
      default: 10
      max: 100
      parameter: "pageLimit"
    offset:
      parameter: "pageOffset"
    relationships:
      role:
        input: roles
        match:
          - parentProperty: roleId
            childProperty: id
            childIndex: roleIds
        sort:
          - property: id
            ascending: true
additionalProperties: false
required:
  - name
  - type
  - input
  - parameters
properties:
  name:
    type: string
    description: |
      The name of this output, which any other component will use to refer to it.
  type:
    const: "jsonObject"
  input:
    type: string
    description: |
      The name of the input from which the data will be fetched.
  limit:
    type: object
    description: |
      Configuration of the paging limit.
    additionalProperties: false
    properties:
      default:
        type: integer
        minimum: 1
        default: 100
        description: |
          The default number of items per page
      max:
        type: integer
        minimum: 1
        default: 1000
        description: |
          The maximum allowed number of items per page
      parameter:
        type: string
        default: "limit"
        description: |
          The name of the parameter used to define the page size.
  offset:
    type: object
    description: |
      Configuration of the paging offset.
    additionalProperties: false
    properties:
      parameter:
        type: string
        default: "offset"
        description: |
          The name of the parameter used to define the paging offset.
  parameters:
    $ref: "./definitions/parameters.yaml"
  relationships:
    $ref: "./definitions/relationships.yaml"
