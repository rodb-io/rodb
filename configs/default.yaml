parsers:
  - name: defaultInteger
    type: integer
    ignoreCharacters: ", .â‚¬$"
  - name: defaultFloat
    type: float
    decimalSeparator: "."
    ignoreCharacters: ", "
  - name: defaultBoolean
    type: boolean
    trueValues: ["true", "1", "yes", "TRUE", "YES"]
    falseValues: ["false", "0", "no", "FALSE", "NO", ""]
  - name: defaultString
    type: string
    convertFromCharset: ""
  - name: defaultJson
    type: json
  - name: defaultSplit
    type: split
    delimiter: "/"
    delimiterIsRegexp: false
    parser: integer
  - name: defaultSplitRegexp
    type: split
    delimiter: "[^a-z]"
    delimiterIsRegexp: true
    parser: integer
inputs:
  - name: defaultInput
    type: csv
    path: ./dummy.csv
    dieOnInputChange: true
    ignoreFirstRow: true
    delimiter: ","
    columns:
      - name: id
        parser: defaultInteger
      - name: name
        parser: defaultString
      - name: number
        parser: defaultFloat
      - name: bool
        parser: defaultBoolean
  - name: defaultInput2
    type: csv
    path: ./dummy2.csv
    dieOnInputChange: true
    ignoreFirstRow: true
    autodetectColumns: true
    delimiter: ","
  - name: defaultInput3
    type: xml
    path: ./dummy.xml
    dieOnInputChange: true
    recordXpath: "//item"
    properties:
      - name: id
        parser: defaultInteger
        xpath: "/id"
      - name: name
        parser: defaultString
        xpath: "string(//name)"
      - name: number
        parser: defaultFloat
        xpath: "/number"
      - name: bool
        parser: defaultBoolean
        xpath: "/bool"
      - name: integerArray
        type: array
        xpath: "/*/foo::text()"
        items:
          parser: defaultInteger
      - name: objectArray
        type: array
        xpath: "/bar"
        items:
          type: object
          properties:
            - name: prop_a
              parser: defaultInteger
              xpath: "string(/baz)"
      - name: object
        type: object
        xpath: "/*/foo::text()"
        properties:
          - name: prop_a
            parser: defaultInteger
            xpath: "/*/foo::text()"
  - name: defaultInput4
    type: json
    path: ./dummy.json
    dieOnInputChange: true
indexes:
  - name: defaultIndex
    type: map
    input: defaultInput
    properties:
      - id
      - name
  - name: defaultIndexWildcard
    type: wildcard
    path: ./wildcard.rodb
    input: defaultInput
    ignoreCase: true
    properties:
      - name
  - name: defaultIndexSqlite
    type: sqlite
    dsn: ./sqlite.rodb
    input: defaultInput
    properties:
      - name: id
        collate: binary
      - name: name
        collate: nocase
  - name: defaultIndexFts5
    type: fts5
    dsn: ./fts5.rodb
    input: defaultInput
    prefix: [2, 3] # https://www.sqlite.org/fts5.html#prefix_indexes
    tokenize: "unicode61 remove_diacritics 0 tokenchars '-_'" # https://www.sqlite.org/fts5.html#tokenizers
    properties:
      - id
      - name
outputs:
  - name: defaultGraphqlOutput
    type: graphql
  - name: defaultJsonArrayOutput
    type: jsonArray
    input: defaultInput
    limit:
      default: 100
      max: 1000
      parameter: "limit"
    offset:
      parameter: "offset"
    parameters:
      id:
        property: id
        index: defaultIndex
        parser: integer
      name:
        property: name
        index: defaultIndex
        parser: string
    relationships:
      mySubProperty:
        input: defaultInput
        isArray: false
        match:
          - parentProperty: id
            childProperty: id
            childIndex: defaultIndex
  - name: defaultJsonObjectOutput
    type: jsonObject
    input: defaultInput
    relationships:
      mySubProperty:
        input: defaultInput
        isArray: false
        match:
          - parentProperty: id
            childProperty: id
            childIndex: defaultIndex
        relationships:
          mySubSubProperty:
            input: defaultInput
            isArray: true
            match:
              - parentProperty: id
                childProperty: id
                childIndex: defaultIndex
            sort:
              - property: id
                ascending: true
    parameters:
      id:
        property: id
        index: defaultIndex
        parser: integer
services:
  - name: defaultService
    type: http
    http:
      listen: ":80"
    https:
      listen: ":443"
      certificatePath: "./foo.cert"
      privateKeyPath: "./foo.key"
    errorsType: application/json
    routes:
      - path: "/dummies"
        output: defaultJsonArrayOutput
      - path: "/dummies/{id}"
        output: defaultJsonObjectOutput
